name: Java CI/CD with Docker and EC2

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    name: 构建 & 推送 & 部署 🚀
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: zhanyaodocker/my-java-app
      TAG: ${{ github.sha }}

    steps:
      - name: ✅ 拉取代码
        uses: actions/checkout@v3

      - name: ☕ 安装 Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📦 缓存 Maven 依赖
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}-

      - name: 🔧 构建 Java 项目
        run: mvn clean package -DskipTests

      - name: 📤 上传构建产物 (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: my-java-app-jar
          path: target/*.jar

      - name: 🐳 构建 Docker 镜像并打 tag
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TAG .

      - name: 🔐 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 🚀 推送镜像到 Docker Hub
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TAG

      - name: 📦 SSH 登录 EC2 并部署容器
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "🛑 停止旧容器（如果有）"
            docker stop my-java-app || true
            docker rm my-java-app || true

            echo "📥 拉取最新镜像"
            docker pull $IMAGE_NAME:latest

            echo "🚀 启动容器"
            docker run -d -p 8080:8080 --name my-java-app $IMAGE_NAME:latest

            echo "✅ 当前运行中的容器："
            docker ps
